export const SLOC = "Source lines of code is a software metric used to measure the size of a computer program by counting the number of lines in the text of the program's source code."
export const CYC = "the number of possible execution paths inside a given piece of code."
export const MAINTAINABILITY = "your code is easy to read, understand, modify, and reuse by yourself and others."
export const EFFORT = "Effort, in the context of code metrics like Halstead, quantifies the mental workload required to understand or maintain a piece of code, considering its length, complexity, and vocabulary usage."
export const OPERATORS = "Operators in the context of code metrics refer to distinct symbols or keywords used for operations in programming languages, such as arithmetic operators (+, -, *, /), logical operators (&&, ||, !), comparison operators (==, !=, >, <), etc."
export const OPERANDS = " a value or expression that represents data to be manipulated by an operator in a computer's instruction code or programming language."
export const LENGTH = "code metrics typically refers to the total number of characters or tokens in a piece of code, providing a measure of its size or extent."
export const DIFFICULTY = "code metrics assesses the cognitive challenge or complexity involved in understanding or maintaining a piece of code, often influenced by factors such as control flow, data flow, and nesting levels."
export const PARAMETERS = "code metrics count the number of variables or values passed to a function or method, indicating the inputs required for its execution."
export const BUGS = "code metrics represents an estimate of the number of potential errors or defects present in the code, calculated based on factors like complexity, size, and certain assumptions about programmer behavior."
export const CYCLOMATIC_DENSITY = "code metric that measures the ratio of the cyclomatic complexity of a codebase to its total number of source lines of code (SLOC). It provides insight into the complexity of the code relative to its size, with higher values indicating more complex code per line."
export const TIME = "ode metrics refers to the estimated duration required to understand or maintain a piece of code, calculated based on factors such as complexity, size, and cognitive workload."
export const ANALYSIS_AGGREGATE = "method that calculates the average cost of a series of operations by dividing the total cost by the number of operations. Aggregate analysis can also be used to obtain a better upper bound that considers the entire sequence of operations."